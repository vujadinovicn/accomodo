package backward;
import com.ftn.sbnz.model.models.ListingAccumulator;
import com.ftn.sbnz.model.models.LocationBackward;
import com.ftn.sbnz.model.models.Listing;

global String backwardLocation;

query isContainedIn( String x, String y )
  LocationBackward( x, y; )
  or
  ( LocationBackward( z, y; ) and isContainedIn( x, z; ) )
end

rule "Find by locations using backward"
no-loop true
when
    // String( this == "go4" )
    $listing: Listing($location: location.address, $id: id)
    // LocationBackward( $location, "Savski Venac"; )
    isContainedIn($location, backwardLocation; )
    $accumulator: ListingAccumulator(listings not contains $id)
then
    modify($accumulator){
      addListing($id)
    }
    System.out.println( "Listing "  + $id + ", in " + $location +  ", is in " + backwardLocation);
end