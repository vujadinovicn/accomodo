package queries;
import com.ftn.sbnz.model.models.Owner;
import com.ftn.sbnz.model.models.Booking;
import com.ftn.sbnz.model.models.Traveler;
import com.ftn.sbnz.model.models.Destination;
import com.ftn.sbnz.model.enums.BookingStatus;

query "Top Destinations For Traveler" (Long travelerId)
    $destination: Destination()
    $count: Number() from accumulate (
        Booking(listing.location.destination.name == $destination.name, traveler.id == travelerId),
        count(1)
    )
end

query "Spent For Traveler" (Long travelerId)
    $spentAllTime: Number() from accumulate (
        $booking: Booking(traveler.id == travelerId, $listing : listing, status == BookingStatus.ACCEPTED) ,
        sum($booking.getPricePerNight() * daysBetween($booking.getStartDate(), $booking.getEndDate()))
    )
    $spent7days: Number() from accumulate (
        $booking: Booking(traveler.id == travelerId, $listing : listing, status == BookingStatus.ACCEPTED,
             $startDate: startDate) and eval(daysBetween($booking.getStartDate(), dateNow) <= 7),
        // over window:time(7d),
        sum($booking.getPricePerNight() * daysBetween($booking.getStartDate(), $booking.getEndDate()))
    )
    $spentMonth: Number() from accumulate (
        $booking: Booking(traveler.id == travelerId, $listing : listing, status == BookingStatus.ACCEPTED,
            $startDate: startDate) and eval(daysBetween($booking.getStartDate(), dateNow) <= 30),
        // over window:time(30d),
        sum($booking.getPricePerNight() * daysBetween($booking.getStartDate(), $booking.getEndDate()))
    )
    $spentSixMonths: Number() from accumulate (
        $booking: Booking(traveler.id == travelerId, $listing : listing, status == BookingStatus.ACCEPTED,
            $startDate: startDate) and eval(daysBetween($booking.getStartDate(), dateNow) <= 180),
        // over window:time(180d),
        sum($booking.getPricePerNight() * daysBetween($booking.getStartDate(), $booking.getEndDate()))
    )
    $spentYear: Number() from accumulate (
        $booking: Booking(traveler.id == travelerId, $listing : listing, status == BookingStatus.ACCEPTED,
            $startDate: startDate) and eval(daysBetween($booking.getStartDate(), dateNow) <= 365),
        // over window:time(365d),
        sum($booking.getPricePerNight() * daysBetween($booking.getStartDate(), $booking.getEndDate()))
    )
end

function int daysBetween(java.util.Date startDate, java.util.Date endDate) {
    java.time.LocalDate startLocalDate = startDate.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate();
    java.time.LocalDate endLocalDate = endDate.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate();
    return (int) java.time.temporal.ChronoUnit.DAYS.between(startLocalDate, endLocalDate);
}